#PEGASUS hacker Windows ipfone android
#ARQUIVOS DESKIPOGRAFADOS

$relatorioPath = "$env:USERPROFILE\Documents\relatorio_simples.html"

function ListarConteudoPastaHTML {
    param(
        [string]$titulo,
        [string]$caminho,
        [int]$nivel = 0,
        [int]$maxNivel = 3
    )

    $html = "<h2>$titulo</h2>"

    if (-not (Test-Path $caminho)) {
        $html += "<p style='color:red;'>Pasta n√£o encontrada ou inacess√≠vel: $caminho</p>"
        return $html
    }

    $html += "<table border='1' cellpadding='4' cellspacing='0' style='border-collapse:collapse;width:100%;font-family:Arial,sans-serif;'>"
    $html += "<tr style='background:#3498db;color:#fff;'><th>Nome</th><th>Tipo</th><th>Tamanho</th><th>√öltima Modifica√ß√£o</th></tr>"

    try {
        $itens = Get-ChildItem -Path $caminho -Force -ErrorAction Stop
    }
    catch {
        $html += "<tr><td colspan='4' style='color:red;'>Erro ao acessar: $_</td></tr>"
        $html += "</table>"
        return $html
    }

    foreach ($item in $itens) {
        $indent = "&nbsp;" * ($nivel * 4)
        $nomeOriginal = [System.Web.HttpUtility]::HtmlEncode($item.Name)
        $pathEncoded = "file:///" + ($item.FullName -replace '\\','/')
        $link = "<a href='$pathEncoded' target='_blank'>$nomeOriginal</a>"

        $tipo = if ($item.PSIsContainer) { "Pasta" } else { "Arquivo" }
        $tamanho = if (-not $item.PSIsContainer) { "{0:N2} KB" -f ($item.Length / 1KB) } else { "-" }
        $modificado = $item.LastWriteTime.ToString("dd/MM/yyyy HH:mm:ss")

        $html += "<tr><td>$indent$link</td><td>$tipo</td><td style='text-align:right;'>$tamanho</td><td>$modificado</td></tr>"

        if (-not $item.PSIsContainer -and ($item.Attributes -band [System.IO.FileAttributes]::Encrypted)) {
            try {
                cipher /d "$($item.FullName)" | Out-Null
                $html += "<tr><td colspan='4' style='color:green;'>‚úî Arquivo descriptografado: $($item.Name)</td></tr>"
            }
            catch {
                $html += "<tr><td colspan='4' style='color:red;'>‚ùå Falha ao descriptografar: $($item.Name)</td></tr>"
            }
        }

        if ($item.PSIsContainer -and $nivel -lt $maxNivel) {
            $html += ListarConteudoPastaHTML -titulo "" -caminho $item.FullName -nivel ($nivel + 1) -maxNivel $maxNivel
        }
    }

    $html += "</table>"
    return $html
}

$so = Get-CimInstance Win32_OperatingSystem
$cpu = Get-CimInstance Win32_Processor

$html = @"
<!DOCTYPE html>
<html>
<head>
    <meta charset='UTF-8'>
    <title>Relat√≥rio Simples do Sistema</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; background:#f9f9f9; color:#333; }
        h1, h2 { color: #2c3e50; }
        table { background:#fff; margin-bottom:20px; font-size:14px; }
        th, td { padding:8px; border:1px solid #ccc; vertical-align: top; }
        th { background-color:#3498db; color:#fff; }
        tr:nth-child(even) { background-color:#f2f2f2; }
        a { text-decoration: none; color: #2980b9; }
        a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <h1>Relat√≥rio Simples do Sistema</h1>
    <p>Gerado em $(Get-Date -Format 'dd/MM/yyyy HH:mm:ss')</p>

    <h2>Informa√ß√µes do Sistema</h2>
    <table>
        <tr><th>Sistema Operacional</th><td>$($so.Caption) - $($so.OSArchitecture)</td></tr>
        <tr><th>Usu√°rio Logado</th><td>$($env:USERNAME)</td></tr>
        <tr><th>Nome do Computador</th><td>$($env:COMPUTERNAME)</td></tr>
        <tr><th>Processador</th><td>$($cpu.Name) - $($cpu.NumberOfCores) n√∫cleos</td></tr>
    </table>
"@

$html += ListarConteudoPastaHTML -titulo "üìÅ Documentos" -caminho "$env:USERPROFILE\Documents"
$html += ListarConteudoPastaHTML -titulo "üñºÔ∏è Imagens" -caminho "$env:USERPROFILE\Pictures"
$html += ListarConteudoPastaHTML -titulo "üéµ M√∫sica" -caminho "$env:USERPROFILE\Music"
$html += ListarConteudoPastaHTML -titulo "üé¨ V√≠deos" -caminho "$env:USERPROFILE\Videos"
$html += ListarConteudoPastaHTML -titulo "‚¨áÔ∏è Transfer√™ncias" -caminho "$env:USERPROFILE\Downloads"
$html += ListarConteudoPastaHTML -titulo "üñ•Ô∏è √Årea de Trabalho" -caminho "$env:USERPROFILE\Desktop"
$html += ListarConteudoPastaHTML -titulo "üë• Pasta Users (n√≠vel 2)" -caminho "C:\Users" -maxNivel 2
$html += ListarConteudoPastaHTML -titulo "üíæ Disco C:\ (n√≠vel 1)" -caminho "C:\" -maxNivel 1

$html += "</body></html>"

$html | Out-File -FilePath $relatorioPath -Encoding UTF8

Write-Host "‚úÖ Relat√≥rio gerado com sucesso!"
Write-Host "üìÑ Caminho: $relatorioPath"
Start-Process $relatorioPath
